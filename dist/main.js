(()=>{"use strict";var t=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.dotRaw=function(t,e,n,i){return t*n+e*i},t.dot=function(t,e){return this.dotRaw(t.x,t.y,e.x,e.y)},t.prototype.dot=function(e){return t.dot(this,e)},t.crossRaw=function(t,e,n,i){return t*i-n*e},t.cross=function(t,e){return this.crossRaw(t.x,t.y,e.x,e.y)},t.prototype.cross=function(e){return t.cross(this,e)},t.lenRaw=function(t,e){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2))},t.len=function(t){return this.lenRaw(t.x,t.y)},t.prototype.len=function(){return t.len(this)},t.normalizeRaw=function(t,e,n){void 0===n&&(n=1);var i=n/this.lenRaw(t,e);return this.mulRaw(t,e,i)},t.normalize=function(t,e){return void 0===e&&(e=1),this.normalizeRaw(t.x,t.y,e)},t.prototype.normalize=function(e){return void 0===e&&(e=1),t.normalize(this,e)},t.equalsRaw=function(t,e,n,i){return t===n&&e===i},t.equals=function(t,e){return this.equalsRaw(t.x,t.y,e.x,e.y)},t.prototype.equals=function(e){return t.equals(this,e)},t.addRaw=function(e,n,i,r){return new t(e+i,n+r)},t.add=function(t,e){return this.addRaw(t.x,t.y,e.x,e.y)},t.prototype.add=function(e){return t.add(this,e)},t.subRaw=function(e,n,i,r){return new t(e-i,n-r)},t.sub=function(t,e){return this.subRaw(t.x,t.y,e.x,e.y)},t.prototype.sub=function(e){return t.sub(this,e)},t.mulRaw=function(e,n,i){return new t(e*i,n*i)},t.mul=function(t,e){return this.mulRaw(t.x,t.y,e)},t.prototype.mul=function(e){return t.mul(this,e)},t.intersectionTimesRaw=function(e,n,i,r,o,s,u,h){var c=this.crossRaw(i-e,r-n,u-o,h-s);return new t(this.crossRaw(u-o,h-s,e-o,n-s)/c,this.crossRaw(i-e,r-n,e-o,n-s)/c)},t.intersectionTimes=function(t,e,n,i){return this.intersectionTimesRaw(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)},t.prototype.intersectionTimes=function(e,n,i){return t.intersectionTimes(this,e,n,i)},t.intersectionRaw=function(t,e,n,i,r,o,s,u){var h=this.intersectionTimesRaw(t,e,n,i,r,o,s,u);if(h)return h.y=e+(i-e)*h.x,h.x=t+(n-t)*h.x,h},t.intersection=function(t,e,n,i){return this.intersectionRaw(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)},t.prototype.intersection=function(e,n,i){return t.intersection(this,e,n,i)},t.prototype.angle=function(t){if(t){var e=this.angle(),n=t.angle();return n<e?n+2*Math.PI-e:n-e}return this.y>0?Math.acos(this.x/this.len()):2*Math.PI-Math.acos(this.x/this.len())},t}(),e=function(){function e(e,n,i,r){this.v1=new t(e,n),this.v2=new t(i,r)}return Object.defineProperty(e.prototype,"x1",{get:function(){return this.v1.x},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y1",{get:function(){return this.v1.y},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"x2",{get:function(){return this.v2.x},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y2",{get:function(){return this.v2.y},enumerable:!1,configurable:!0}),e.prototype.len=function(){return this.v2.sub(this.v1).len()},e.prototype.pointAt=function(t){return this.v1.add(this.v2.sub(this.v1).mul(t))},e.prototype.before=function(t){return this.v1.add(this.v2.sub(this.v1).mul(-t/this.len()))},e.prototype.after=function(t){return this.v1.add(this.v2.sub(this.v1).mul((this.len()+t)/this.len()))},e.prototype.intersectionTimesWith=function(t){return this.v1.intersectionTimes(this.v2,t.v1,t.v2)},e.prototype.update=function(t,e,n,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===i&&(i=0),this.v1.x+=t,this.v1.y+=e,this.v2.x+=n,this.v2.y+=i},e}(),n=function(){function t(t){void 0===t&&(t=[]),this.vertices=t}return t.prototype.areaBetween=function(t,e){return(this.vertices[e].x-this.vertices[t].x)*(this.vertices[t].y+this.vertices[e].y)/2},t.prototype.area=function(){for(var t=0,e=this.vertices.length-1,n=0;n<this.vertices.length;n++)t+=this.areaBetween(e,n),e=n;return t},t.prototype.shareEdge=function(t,e){for(var n=this.vertices.length-1,i=0;i<this.vertices.length;i++){if(this.vertices[n].equals(t)&&this.vertices[i].equals(e))return!0;n=i}return!1},t.prototype.intersectionWith=function(t){},t}(),i=function(){function t(t){var n,i,r,o,s=this;this.renderer=t,this.lines=[],this.intersectionTimes=[],this.intersectionPoints=[],this.renderer.setMouseDownHandler((function(t,r,o){i=o||null,(n=r||null)||(n=new e(t.clientX,t.clientY,t.clientX,t.clientY),i=n.v2,s.addLine(n))})),this.renderer.setMouseUpHandler((function(t,e,u){e?(r&&r!==e&&s.renderer.drawLine(r,e===o,!1),r=e,s.renderer.drawLine(r,e===o,!0)):r&&s.renderer.drawLine(r,e===o,!1),n=null,i=null})),this.renderer.setMouseMoveHandler((function(t,e,u){e?(o&&o!==e&&s.renderer.drawLine(o,!1,e===r),o=e,s.renderer.drawLine(o,!0,e===r)):o&&(s.renderer.drawLine(o,!1,e===r),o=null),n&&(i?(i.x=t.clientX,i.y=t.clientY):n.update(t.movementX,t.movementY,t.movementX,t.movementY),s.updateIntersectionTimes(n),s.renderer.drawLine(n,n===o,n===r))}))}return t.prototype.addLine=function(t){this.addIntersectionTimes(t),this.lines.push(t),this.renderer.drawLine(t,!1,!1)},t.prototype.addIntersectionTimes=function(t){for(var e,n=[],i=[],r=0;r<this.lines.length;r++)e=this.lines[r].intersectionTimesWith(t),this.intersectionTimes[r].push(e.x),this.intersectionPoints[r].push(0<=e.x&&e.x<=1&&0<=e.y&&e.y<=1?this.lines[r].v1.add(this.lines[r].v2.sub(this.lines[r].v1).mul(e.x)):null),n.push(e.y),i.push(null);n.push(NaN),i.push(null),this.intersectionTimes.push(n),this.intersectionPoints.push(i),this.renderIntersections()},t.prototype.updateIntersectionTimes=function(t){for(var e,n=this.lines.indexOf(t),i=0;i<this.lines.length;i++)i!==n&&(e=this.lines[i].intersectionTimesWith(t),this.intersectionTimes[i][n]=e.x,this.intersectionTimes[n][i]=e.y,i<n?this.intersectionPoints[i][n]=0<=e.x&&e.x<=1&&0<=e.y&&e.y<=1?this.lines[i].v1.add(this.lines[i].v2.sub(this.lines[i].v1).mul(e.x)):null:this.intersectionPoints[n][i]=0<=e.x&&e.x<=1&&0<=e.y&&e.y<=1?this.lines[i].v1.add(this.lines[i].v2.sub(this.lines[i].v1).mul(e.x)):null);this.renderIntersections()},t.prototype.renderIntersections=function(){var t=this;this.renderer.clearIntersections(),this.intersectionPoints.forEach((function(e){e.forEach((function(e){e&&t.renderer.drawPoint(e)}))})),this.renderer.clearPolygons(),this.buildPolygonsFromIntersectionTimes().forEach((function(e){return t.renderer.drawPolygon(e)}))},t.prototype.testSide=function(t,e,n){return e.sub(t).cross(n.sub(t))>0},t.prototype.buildPolygonsFromIntersectionTimes=function(){for(var t=this.intersectionTimes.map((function(t){return t.map((function(t,e){return e})).filter((function(e){return!isNaN(t[e])&&0<=t[e]&&t[e]<=1})).sort((function(e,n){return t[e]-t[n]}))})),e=[],i=0;i<t.length;i++)for(var r=function(r){var s,u=i,h=r,c=[o.lines[u].pointAt(o.intersectionTimes[u][t[u][h]]),o.lines[u].pointAt(o.intersectionTimes[u][t[u][h+1]])];h+=1;for(var a=0,l=!1;a++<1e3&&(s=u,"number"==typeof(u=t[u][h]));){if("number"!=typeof(h=t[u].findIndex((function(t){return t===s})))&&console.log("error"),0<h&&o.testSide(c[c.length-2],o.lines[u].pointAt(o.intersectionTimes[u][t[u][h-1]]),c[c.length-1]))h-=1;else{if(!(h<t[u].length-1&&o.testSide(c[c.length-2],o.lines[u].pointAt(o.intersectionTimes[u][t[u][h+1]]),c[c.length-1])))break;h+=1}if(c.push(o.lines[u].pointAt(o.intersectionTimes[u][t[u][h]])),c[0].equals(c[c.length-1])){c.pop(),l=!0;break}}1e3===i&&console.warn("too many loops"),l&&e.push(new n(c))},o=this,s=0;s<t[i].length-1;s++)r(s);return e},t}(),r=document.createElementNS("http://www.w3.org/2000/svg","g");r.setAttribute("stroke","black"),r.setAttribute("stroke-width","0.4px");var o=document.createElementNS("http://www.w3.org/2000/svg","line");o.setAttribute("stroke-dasharray","10, 4, 1, 4");var s=document.createElementNS("http://www.w3.org/2000/svg","path");s.setAttribute("d","M 0, 0A 10, 10, 0, 0, 0, -5, -5A 10, 10, 0, 1, 1, 5, -5A 10, 10, 0, 0, 0, 0, 0"),s.setAttribute("fill","white"),r.appendChild(o),r.appendChild(s),r.appendChild(s.cloneNode());var u=document.createElementNS("http://www.w3.org/2000/svg","circle");u.setAttribute("fill","green"),u.setAttribute("r","3");var h=document.createElementNS("http://www.w3.org/2000/svg","path");h.setAttribute("fill","green"),h.setAttribute("stroke-width","3"),h.setAttribute("stroke","grey");var c=new(function(){function t(){this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.intersectionContainer=document.createElementNS("http://www.w3.org/2000/svg","g"),this.polygonContainer=document.createElementNS("http://www.w3.org/2000/svg","g"),this.svgGByLine=new Map,this.lineBySvgG=new Map,this.svg.appendChild(this.intersectionContainer),this.svg.appendChild(this.polygonContainer)}return t.prototype.clickHandlerWrapper=function(t){var e=this;return function(n){var i=document.elementFromPoint(n.clientX,n.clientY),r=e.lineBySvgG.get(i.parentNode);i instanceof SVGPathElement&&i.parentNode!==e.polygonContainer?i.parentNode.children[1]===i?t(n,r,r.v1):t(n,r,r.v2):i instanceof SVGLineElement?t(n,r):t(n)}},t.prototype.setMouseDownHandler=function(t){this.onMouseDown&&this.svg.removeEventListener("mousedown",this.onMouseDown),this.onMouseDown=this.clickHandlerWrapper(t),this.svg.addEventListener("mousedown",this.onMouseDown)},t.prototype.setMouseUpHandler=function(t){this.onMouseUp&&this.svg.removeEventListener("mouseup",this.onMouseUp),this.onMouseUp=this.clickHandlerWrapper(t),this.svg.addEventListener("mouseup",this.onMouseUp)},t.prototype.setMouseMoveHandler=function(t){this.onMouseMove&&this.svg.removeEventListener("mousemove",this.onMouseMove),this.onMouseMove=this.clickHandlerWrapper(t),this.svg.addEventListener("mousemove",this.onMouseMove)},t.prototype.drawLine=function(t,e,n){var i;void 0===e&&(e=!1),void 0===n&&(n=!1),this.svgGByLine.has(t)?i=this.svgGByLine.get(t):(i=r.cloneNode(!0),this.svg.appendChild(i),this.svgGByLine.set(t,i),this.lineBySvgG.set(i,t));var o=i.children[0],s=i.children[1],u=i.children[2],h=t.x1.toFixed(),c=t.y1.toFixed(),a=t.x2.toFixed(),l=t.y2.toFixed();o.setAttribute("x1",h),o.setAttribute("y1",c),o.setAttribute("x2",a),o.setAttribute("y2",l),e?i.setAttribute("stroke-width","0.8px"):i.setAttribute("stroke-width","0.4px"),n?i.setAttribute("stroke","#19a194"):i.setAttribute("stroke","black");var d=180*(t.v2.sub(t.v1).angle()-Math.PI/2)/Math.PI;s.setAttribute("transform","translate("+h+", "+c+") rotate("+(isNaN(d)?0:d)+")"),u.setAttribute("transform","translate("+a+", "+l+") rotate("+(isNaN(d)?0:180+d)+")")},t.prototype.eraseLine=function(t){var e=this.svgGByLine.get(t);e&&(this.svg.removeChild(e),this.svgGByLine.delete(t))},t.prototype.drawPoint=function(t){var e=u.cloneNode();e.setAttribute("cx",t.x.toFixed()),e.setAttribute("cy",t.y.toFixed()),this.intersectionContainer.appendChild(e)},t.prototype.clearIntersections=function(){var t=this;this.intersectionContainer.childNodes.forEach((function(e){return t.intersectionContainer.removeChild(e)}))},t.prototype.drawPolygon=function(t){var e=h.cloneNode();e.setAttribute("d","M"+t.vertices.map((function(t){return t.x+" "+t.y})).join(" L ")+"Z"),e.setAttribute("fill","#"+Math.floor(16777215*Math.random()).toString(16)),this.polygonContainer.appendChild(e)},t.prototype.clearPolygons=function(){var t=this;this.polygonContainer.childNodes.forEach((function(e){return t.polygonContainer.removeChild(e)}))},t}());new i(c),document.querySelector("body").appendChild(c.svg)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2xwbG90Ly4vc3JjL3ZlY3RvcjIudHMiLCJ3ZWJwYWNrOi8vcG9scGxvdC8uL3NyYy9saW5lLnRzIiwid2VicGFjazovL3BvbHBsb3QvLi9zcmMvcG9seWdvbi50cyIsIndlYnBhY2s6Ly9wb2xwbG90Ly4vc3JjL3BvbHBsb3QudHMiLCJ3ZWJwYWNrOi8vcG9scGxvdC8uL3NyYy9zdmctcmVuZGVyZXIudHMiLCJ3ZWJwYWNrOi8vcG9scGxvdC8uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJ4IiwieSIsImRvdFJhdyIsIngxIiwieTEiLCJ4MiIsInkyIiwiZG90IiwidSIsInYiLCJ0aGlzIiwib3RoZXIiLCJWZWN0b3IyIiwiY3Jvc3NSYXciLCJjcm9zcyIsImxlblJhdyIsIk1hdGgiLCJzcXJ0IiwicG93IiwibGVuIiwibm9ybWFsaXplUmF3IiwiYnkiLCJjb2VmIiwibXVsUmF3Iiwibm9ybWFsaXplIiwiZXF1YWxzUmF3IiwiZXF1YWxzIiwiYWRkUmF3IiwiYWRkIiwic3ViUmF3Iiwic3ViIiwibXVsIiwiaW50ZXJzZWN0aW9uVGltZXNSYXciLCJmeCIsImZ5IiwidHgiLCJ0eSIsInN4Iiwic3kiLCJleCIsImV5IiwiZGV0IiwiaW50ZXJzZWN0aW9uVGltZXMiLCJmcm9tIiwidG8iLCJzdGFydCIsImVuZCIsImludGVyc2VjdGlvblJhdyIsInRpbWVzIiwiaW50ZXJzZWN0aW9uIiwiYW5nbGUiLCJhMSIsImEyIiwiUEkiLCJhY29zIiwidjEiLCJ2MiIsInBvaW50QXQiLCJ0IiwiYmVmb3JlIiwiYWZ0ZXIiLCJpbnRlcnNlY3Rpb25UaW1lc1dpdGgiLCJ1cGRhdGUiLCJkeDEiLCJkeTEiLCJkeDIiLCJkeTIiLCJ2ZXJ0aWNlcyIsImFyZWFCZXR3ZWVuIiwiaSIsImoiLCJhcmVhIiwiYSIsImxlbmd0aCIsInNoYXJlRWRnZSIsImludGVyc2VjdGlvbldpdGgiLCJsaW5lIiwicmVuZGVyZXIiLCJkcmFnZ2VkTGluZSIsImRyYWdnZWRWZWN0b3IyIiwic2VsZWN0ZWRMaW5lIiwiaG92ZXJlZExpbmUiLCJsaW5lcyIsImludGVyc2VjdGlvblBvaW50cyIsInNldE1vdXNlRG93bkhhbmRsZXIiLCJldmVudCIsImNsaWNrZWRMaW5lIiwiY2xpY2tlZFZlY3RvcjIiLCJMaW5lIiwiY2xpZW50WCIsImNsaWVudFkiLCJhZGRMaW5lIiwic2V0TW91c2VVcEhhbmRsZXIiLCJkcmF3TGluZSIsInNldE1vdXNlTW92ZUhhbmRsZXIiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJ1cGRhdGVJbnRlcnNlY3Rpb25UaW1lcyIsImFkZEludGVyc2VjdGlvblRpbWVzIiwicHVzaCIsIk5hTiIsInJlbmRlckludGVyc2VjdGlvbnMiLCJpbmRleCIsImluZGV4T2YiLCJjbGVhckludGVyc2VjdGlvbnMiLCJmb3JFYWNoIiwiaW50ZXJzZWN0aW9uUG9pbnQiLCJkcmF3UG9pbnQiLCJjbGVhclBvbHlnb25zIiwiYnVpbGRQb2x5Z29uc0Zyb21JbnRlcnNlY3Rpb25UaW1lcyIsInBvbHlnb24iLCJkcmF3UG9seWdvbiIsInRlc3RTaWRlIiwidyIsImludGVyc2VjdGlvblRpbWVzU29ydGVkSW5kZXhBcnJheSIsIm1hcCIsIl8iLCJmaWx0ZXIiLCJpc05hTiIsInNvcnQiLCJwb2x5Z29ucyIsInBrIiwiayIsImwiLCJJIiwiZmluZEluZGV4IiwibSIsImNvbnNvbGUiLCJsb2ciLCJwb3AiLCJ3YXJuIiwiUG9seWdvbiIsImdUZW1wbGF0ZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudE5TIiwic2V0QXR0cmlidXRlIiwibGluZVRlbXBsYXRlIiwiYW5jaG9yVGVtcGxhdGUiLCJhcHBlbmRDaGlsZCIsImNsb25lTm9kZSIsInBvaW50VGVtcGxhdGUiLCJwb2x5Z29uVGVtcGxhdGUiLCJzdmdSZW5kZXJlciIsInN2ZyIsImludGVyc2VjdGlvbkNvbnRhaW5lciIsInBvbHlnb25Db250YWluZXIiLCJzdmdHQnlMaW5lIiwiTWFwIiwibGluZUJ5U3ZnRyIsImNsaWNrSGFuZGxlcldyYXBwZXIiLCJjbGlja0hhbmRsZXIiLCJlbGVtZW50QXQiLCJlbGVtZW50RnJvbVBvaW50IiwiZ2V0IiwicGFyZW50Tm9kZSIsIlNWR1BhdGhFbGVtZW50IiwiY2hpbGRyZW4iLCJTVkdMaW5lRWxlbWVudCIsIm9uTW91c2VEb3duIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbk1vdXNlVXAiLCJvbk1vdXNlTW92ZSIsImlzSG92ZXJlZCIsImlzU2VsZWN0ZWQiLCJzdmdHIiwiaGFzIiwic2V0Iiwic3ZnTGluZSIsInN2Z1BhdGhBbmNob3JTdGFydCIsInN2Z1BhdGhBbmNob3JFbmQiLCJ0b0ZpeGVkIiwiZXJhc2VMaW5lIiwicmVtb3ZlQ2hpbGQiLCJkZWxldGUiLCJwb2ludCIsInN2Z0NpcmNsZSIsImNoaWxkTm9kZXMiLCJjaGlsZE5vZGUiLCJzdmdQYXRoIiwiam9pbiIsImZsb29yIiwicmFuZG9tIiwidG9TdHJpbmciLCJQb2xQbG90IiwicXVlcnlTZWxlY3RvciJdLCJtYXBwaW5ncyI6Im1CQUFBLGlCQUNFLFdBQW1CQSxFQUFjQyxRQUFkLElBQUFELE1BQUEsUUFBYyxJQUFBQyxNQUFBLEdBQWQsS0FBQUQsSUFBYyxLQUFBQyxJQTRIbkMsT0EzSFMsRUFBQUMsT0FBUCxTQUFjQyxFQUFZQyxFQUFZQyxFQUFZQyxHQUNoRCxPQUFPSCxFQUFLRSxFQUFLRCxFQUFLRSxHQUVqQixFQUFBQyxJQUFQLFNBQVdDLEVBQVlDLEdBQ3JCLE9BQU9DLEtBQUtSLE9BQU9NLEVBQUVSLEVBQUdRLEVBQUVQLEVBQUdRLEVBQUVULEVBQUdTLEVBQUVSLElBRXRDLFlBQUFNLElBQUEsU0FBSUksR0FDRixPQUFPQyxFQUFRTCxJQUFJRyxLQUFNQyxJQUVwQixFQUFBRSxTQUFQLFNBQWdCVixFQUFZQyxFQUFZQyxFQUFZQyxHQUNsRCxPQUFPSCxFQUFLRyxFQUFLRCxFQUFLRCxHQUVqQixFQUFBVSxNQUFQLFNBQWFOLEVBQVlDLEdBQ3ZCLE9BQU9DLEtBQUtHLFNB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QyxJQUFJUyxFQUFFUixLQUFLbUwsS0FBSyxPQUFTLEtBQ3pGRCxFQUFRNUMsYUFBYSxPQUFRLElBQU92SCxLQUFLcUssTUFBTSxTQUFXckssS0FBS3NLLFVBQVdDLFNBQVMsS0FDbkY3SyxLQUFLdUksaUJBQWlCUCxZQUFZeUMsSUFFcEMsWUFBQXZFLGNBQUEsc0JBQ0VsRyxLQUFLdUksaUJBQWlCZ0MsV0FBV3hFLFNBQVEsU0FBQXlFLEdBQWEsU0FBS2pDLGlCQUFpQjRCLFlBQVlLLE9BRTVGLEVBL0dBLElDL0JnQixJQUFJTSxFQUFRMUMsR0FDZlQsU0FBU29ELGNBQWMsUUFDL0IvQyxZQUFZSSxFQUFZQyxNIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVmVjdG9yMiB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB4ID0gMCwgcHVibGljIHkgPSAwKSB7fVxuICBzdGF0aWMgZG90UmF3KHgxOiBudW1iZXIsIHkxOiBudW1iZXIsIHgyOiBudW1iZXIsIHkyOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiB4MSAqIHgyICsgeTEgKiB5MjtcbiAgfVxuICBzdGF0aWMgZG90KHU6IFZlY3RvcjIsIHY6IFZlY3RvcjIpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmRvdFJhdyh1LngsIHUueSwgdi54LCB2LnkpO1xuICB9XG4gIGRvdChvdGhlcjogVmVjdG9yMik6IG51bWJlciB7XG4gICAgcmV0dXJuIFZlY3RvcjIuZG90KHRoaXMsIG90aGVyKTtcbiAgfVxuICBzdGF0aWMgY3Jvc3NSYXcoeDE6IG51bWJlciwgeTE6IG51bWJlciwgeDI6IG51bWJlciwgeTI6IG51bWJlcik6IG51bWJlciB7XG4gICAgcmV0dXJuIHgxICogeTIgLSB4MiAqIHkxO1xuICB9XG4gIHN0YXRpYyBjcm9zcyh1OiBWZWN0b3IyLCB2OiBWZWN0b3IyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5jcm9zc1Jhdyh1LngsIHUueSwgdi54LCB2LnkpO1xuICB9XG4gIGNyb3NzKG90aGVyOiBWZWN0b3IyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gVmVjdG9yMi5jcm9zcyh0aGlzLCBvdGhlcik7XG4gIH1cbiAgc3RhdGljIGxlblJhdyh4OiBudW1iZXIsIHk6IG51bWJlcik6IG51bWJlciB7XG4gICAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyh4LCAyKSArIE1hdGgucG93KHksIDIpKTtcbiAgfVxuICBzdGF0aWMgbGVuKHU6IFZlY3RvcjIpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmxlblJhdyh1LngsIHUueSk7XG4gIH1cbiAgbGVuKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIFZlY3RvcjIubGVuKHRoaXMpO1xuICB9XG4gIHN0YXRpYyBub3JtYWxpemVSYXcoeDogbnVtYmVyLCB5OiBudW1iZXIsIGJ5OiBudW1iZXIgPSAxKTogVmVjdG9yMiB7XG4gICAgY29uc3QgY29lZiA9IGJ5IC8gdGhpcy5sZW5SYXcoeCwgeSk7XG4gICAgcmV0dXJuIHRoaXMubXVsUmF3KHgsIHksIGNvZWYpO1xuICB9XG4gIHN0YXRpYyBub3JtYWxpemUodTogVmVjdG9yMiwgYnk6IG51bWJlciA9IDEpOiBWZWN0b3IyIHtcbiAgICByZXR1cm4gdGhpcy5ub3JtYWxpemVSYXcodS54LCB1LnksIGJ5KTtcbiAgfVxuICBub3JtYWxpemUoYnk6IG51bWJlciA9IDEpOiBWZWN0b3IyIHtcbiAgICByZXR1cm4gVmVjdG9yMi5ub3JtYWxpemUodGhpcywgYnkpO1xuICB9XG4gIHN0YXRpYyBlcXVhbHNSYXcoeDE6IG51bWJlciwgeTE6IG51bWJlciwgeDI6IG51bWJlciwgeTI6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIHJldHVybiB4MSA9PT0geDIgJiYgeTEgPT09IHkyO1xuICB9XG4gIHN0YXRpYyBlcXVhbHModTogVmVjdG9yMiwgdjogVmVjdG9yMik6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmVxdWFsc1Jhdyh1LngsIHUueSwgdi54LCB2LnkpO1xuICB9XG4gIGVxdWFscyhvdGhlcjogVmVjdG9yMik6IGJvb2xlYW4ge1xuICAgIHJldHVybiBWZWN0b3IyLmVxdWFscyh0aGlzLCBvdGhlcik7XG4gIH1cbiAgc3RhdGljIGFkZFJhdyh4MTogbnVtYmVyLCB5MTogbnVtYmVyLCB4MjogbnVtYmVyLCB5MjogbnVtYmVyKTogVmVjdG9yMiB7XG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyKHgxICsgeDIsIHkxICsgeTIpO1xuICB9XG4gIHN0YXRpYyBhZGQodTogVmVjdG9yMiwgdjogVmVjdG9yMik6IFZlY3RvcjIge1xuICAgIHJldHVybiB0aGlzLmFkZFJhdyh1LngsIHUueSwgdi54LCB2LnkpO1xuICB9XG4gIGFkZChvdGhlcjogVmVjdG9yMik6IFZlY3RvcjIge1xuICAgIHJldHVybiBWZWN0b3IyLmFkZCh0aGlzLCBvdGhlcik7XG4gIH1cbiAgc3RhdGljIHN1YlJhdyh4MTogbnVtYmVyLCB5MTogbnVtYmVyLCB4MjogbnVtYmVyLCB5MjogbnVtYmVyKTogVmVjdG9yMiB7XG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyKHgxIC0geDIsIHkxIC0geTIpO1xuICB9XG4gIHN0YXRpYyBzdWIodTogVmVjdG9yMiwgdjogVmVjdG9yMik6IFZlY3RvcjIge1xuICAgIHJldHVybiB0aGlzLnN1YlJhdyh1LngsIHUueSwgdi54LCB2LnkpO1xuICB9XG4gIHN1YihvdGhlcjogVmVjdG9yMik6IFZlY3RvcjIge1xuICAgIHJldHVybiBWZWN0b3IyLnN1Yih0aGlzLCBvdGhlcik7XG4gIH1cbiAgc3RhdGljIG11bFJhdyh4OiBudW1iZXIsIHk6IG51bWJlciwgYnk6IG51bWJlcik6IFZlY3RvcjIge1xuICAgIHJldHVybiBuZXcgVmVjdG9yMih4ICogYnksIHkgKiBieSk7XG4gIH1cbiAgc3RhdGljIG11bCh1OiBWZWN0b3IyLCBieTogbnVtYmVyKTogVmVjdG9yMiB7XG4gICAgcmV0dXJuIHRoaXMubXVsUmF3KHUueCwgdS55LCBieSk7XG4gIH1cbiAgbXVsKGJ5OiBudW1iZXIpOiBWZWN0b3IyIHtcbiAgICByZXR1cm4gVmVjdG9yMi5tdWwodGhpcywgYnkpO1xuICB9XG4gIHN0YXRpYyBpbnRlcnNlY3Rpb25UaW1lc1JhdyhcbiAgICBmeDogbnVtYmVyLCBmeTogbnVtYmVyLCB0eDogbnVtYmVyLCB0eTogbnVtYmVyLFxuICAgIHN4OiBudW1iZXIsIHN5OiBudW1iZXIsIGV4OiBudW1iZXIsIGV5OiBudW1iZXJcbiAgKTogVmVjdG9yMiB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgZGV0ID0gdGhpcy5jcm9zc1Jhdyh0eCAtIGZ4LCB0eSAtIGZ5LCBleCAtIHN4LCBleSAtIHN5KTtcbiAgICByZXR1cm4gbmV3IFZlY3RvcjIoXG4gICAgICB0aGlzLmNyb3NzUmF3KGV4IC0gc3gsIGV5IC0gc3ksIGZ4IC0gc3gsIGZ5IC0gc3kpIC8gZGV0LFxuICAgICAgdGhpcy5jcm9zc1Jhdyh0eCAtIGZ4LCB0eSAtIGZ5LCBmeCAtIHN4LCBmeSAtIHN5KSAvIGRldFxuICAgICk7XG4gIH1cbiAgc3RhdGljIGludGVyc2VjdGlvblRpbWVzKFxuICAgIGZyb206IFZlY3RvcjIsIHRvOiBWZWN0b3IyLCBzdGFydDogVmVjdG9yMiwgZW5kOiBWZWN0b3IyXG4gICk6IFZlY3RvcjIgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmludGVyc2VjdGlvblRpbWVzUmF3KGZyb20ueCwgZnJvbS55LCB0by54LCB0by55LCBzdGFydC54LCBzdGFydC55LCBlbmQueCwgZW5kLnkpO1xuICB9XG4gIGludGVyc2VjdGlvblRpbWVzKHRvOiBWZWN0b3IyLCBzdGFydDogVmVjdG9yMiwgZW5kOiBWZWN0b3IyKTogVmVjdG9yMiB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIFZlY3RvcjIuaW50ZXJzZWN0aW9uVGltZXModGhpcywgdG8sIHN0YXJ0LCBlbmQpO1xuICB9XG4gIHN0YXRpYyBpbnRlcnNlY3Rpb25SYXcoXG4gICAgZng6IG51bWJlciwgZnk6IG51bWJlciwgdHg6IG51bWJlciwgdHk6IG51bWJlcixcbiAgICBzeDogbnVtYmVyLCBzeTogbnVtYmVyLCBleDogbnVtYmVyLCBleTogbnVtYmVyXG4gICk6IFZlY3RvcjIgfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IHRpbWVzID0gdGhpcy5pbnRlcnNlY3Rpb25UaW1lc1JhdyhmeCwgZnksIHR4LCB0eSwgc3gsIHN5LCBleCwgZXkpO1xuICAgIGlmICh0aW1lcykge1xuICAgICAgdGltZXMueSA9IGZ5ICsgKHR5IC0gZnkpICogdGltZXMueDtcbiAgICAgIHRpbWVzLnggPSBmeCArICh0eCAtIGZ4KSAqIHRpbWVzLng7XG4gICAgICByZXR1cm4gdGltZXM7XG4gICAgfVxuICB9XG4gIHN0YXRpYyBpbnRlcnNlY3Rpb24oZnJvbTogVmVjdG9yMiwgdG86IFZlY3RvcjIsIHN0YXJ0OiBWZWN0b3IyLCBlbmQ6IFZlY3RvcjIpOiBWZWN0b3IyIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5pbnRlcnNlY3Rpb25SYXcoZnJvbS54LCBmcm9tLnksIHRvLngsIHRvLnksIHN0YXJ0LngsIHN0YXJ0LnksIGVuZC54LCBlbmQueSk7XG4gIH1cbiAgaW50ZXJzZWN0aW9uKHRvOiBWZWN0b3IyLCBzdGFydDogVmVjdG9yMiwgZW5kOiBWZWN0b3IyKTogVmVjdG9yMiB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIFZlY3RvcjIuaW50ZXJzZWN0aW9uKHRoaXMsIHRvLCBzdGFydCwgZW5kKTtcbiAgfVxuICBhbmdsZShvdGhlcj86IFZlY3RvcjIpOiBudW1iZXIge1xuICAgIGlmIChvdGhlcikge1xuICAgICAgIGNvbnN0IGExID0gdGhpcy5hbmdsZSgpO1xuICAgICAgIGNvbnN0IGEyID0gb3RoZXIuYW5nbGUoKTtcbiAgICAgICBpZiAoYTIgPCBhMSkge1xuICAgICAgICByZXR1cm4gYTIgKyAyICogTWF0aC5QSSAtIGExO1xuICAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBhMiAtIGExO1xuICAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHRoaXMueSA+IDApIHtcbiAgICAgIHJldHVybiBNYXRoLmFjb3ModGhpcy54IC8gdGhpcy5sZW4oKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAyICogTWF0aC5QSSAtIE1hdGguYWNvcyh0aGlzLnggLyB0aGlzLmxlbigpKTtcbiAgICB9XG4gIH1cbn0iLCJpbXBvcnQgeyBWZWN0b3IyIH0gZnJvbSBcIi4vdmVjdG9yMlwiO1xuXG5leHBvcnQgY2xhc3MgTGluZSB7XG4gIHYxOiBWZWN0b3IyO1xuICB2MjogVmVjdG9yMjtcbiAgY29uc3RydWN0b3IoXG4gICAgeDE/OiBudW1iZXIsXG4gICAgeTE/OiBudW1iZXIsXG4gICAgeDI/OiBudW1iZXIsXG4gICAgeTI/OiBudW1iZXJcbiAgKSB7XG4gICAgdGhpcy52MSA9IG5ldyBWZWN0b3IyKHgxLCB5MSk7XG4gICAgdGhpcy52MiA9IG5ldyBWZWN0b3IyKHgyLCB5Mik7XG4gIH1cbiAgZ2V0IHgxKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudjEueDtcbiAgfVxuICBnZXQgeTEoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy52MS55O1xuICB9XG4gIGdldCB4MigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnYyLng7XG4gIH1cbiAgZ2V0IHkyKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudjIueTtcbiAgfVxuICBsZW4oKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy52Mi5zdWIodGhpcy52MSkubGVuKCk7XG4gIH1cbiAgcG9pbnRBdCh0OiBudW1iZXIpOiBWZWN0b3IyIHtcbiAgICByZXR1cm4gdGhpcy52MS5hZGQodGhpcy52Mi5zdWIodGhpcy52MSkubXVsKHQpKTtcbiAgfVxuICBiZWZvcmUodDogbnVtYmVyKTogVmVjdG9yMiB7XG4gICAgcmV0dXJuIHRoaXMudjEuYWRkKHRoaXMudjIuc3ViKHRoaXMudjEpLm11bCgtdCAvIHRoaXMubGVuKCkpKTtcbiAgfVxuICBhZnRlcih0OiBudW1iZXIpOiBWZWN0b3IyIHtcbiAgICByZXR1cm4gdGhpcy52MS5hZGQodGhpcy52Mi5zdWIodGhpcy52MSkubXVsKCh0aGlzLmxlbigpICsgdCkgLyB0aGlzLmxlbigpKSk7XG4gIH1cbiAgaW50ZXJzZWN0aW9uVGltZXNXaXRoKG90aGVyOiBMaW5lKTogVmVjdG9yMiB7XG4gICAgcmV0dXJuIHRoaXMudjEuaW50ZXJzZWN0aW9uVGltZXModGhpcy52Miwgb3RoZXIudjEsIG90aGVyLnYyKTtcbiAgfVxuICB1cGRhdGUoZHgxID0gMCwgZHkxID0gMCwgZHgyID0gMCwgZHkyID0gMCk6IHZvaWQge1xuICAgIHRoaXMudjEueCArPSBkeDE7XG4gICAgdGhpcy52MS55ICs9IGR5MTtcbiAgICB0aGlzLnYyLnggKz0gZHgyO1xuICAgIHRoaXMudjIueSArPSBkeTI7XG4gIH1cbn0iLCJpbXBvcnQgeyBMaW5lIH0gZnJvbSBcIi4vbGluZVwiO1xuaW1wb3J0IHsgVmVjdG9yMiB9IGZyb20gXCIuL3ZlY3RvcjJcIjtcblxuZXhwb3J0IGNsYXNzIFBvbHlnb24ge1xuICBjb25zdHJ1Y3RvcihyZWFkb25seSB2ZXJ0aWNlczogVmVjdG9yMltdID0gW10pIHtcblxuICB9XG4gIHByaXZhdGUgYXJlYUJldHdlZW4oaTogbnVtYmVyLCBqOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiAodGhpcy52ZXJ0aWNlc1tqXS54IC0gdGhpcy52ZXJ0aWNlc1tpXS54KSAqICh0aGlzLnZlcnRpY2VzW2ldLnkgKyB0aGlzLnZlcnRpY2VzW2pdLnkpIC8gMjtcbiAgfVxuICBhcmVhKCk6IG51bWJlciB7XG4gICAgbGV0IGEgPSAwO1xuICAgIGxldCBpID0gdGhpcy52ZXJ0aWNlcy5sZW5ndGggLSAxO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy52ZXJ0aWNlcy5sZW5ndGg7IGorKykge1xuICAgICAgYSArPSB0aGlzLmFyZWFCZXR3ZWVuKGksIGopO1xuICAgICAgaSA9IGo7XG4gICAgfVxuICAgIHJldHVybiBhO1xuICB9XG4gIHNoYXJlRWRnZSh1OiBWZWN0b3IyLCB2OiBWZWN0b3IyKTogYm9vbGVhbiB7XG4gICAgbGV0IGkgPSB0aGlzLnZlcnRpY2VzLmxlbmd0aCAtIDE7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLnZlcnRpY2VzLmxlbmd0aDsgaisrKSB7XG4gICAgICBpZiAodGhpcy52ZXJ0aWNlc1tpXS5lcXVhbHModSkgJiYgdGhpcy52ZXJ0aWNlc1tqXS5lcXVhbHModikpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpID0gajtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGludGVyc2VjdGlvbldpdGgobGluZTogTGluZSkge1xuICAgIFxuICB9XG59IiwiaW1wb3J0IHsgUG9scGxvdFJlbmRlcmVyIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy9wb2xwbG90LXJlbmRlcmVyXCI7XG5pbXBvcnQgeyBMaW5lIH0gZnJvbSBcIi4vbGluZVwiO1xuaW1wb3J0IHsgUG9seWdvbiB9IGZyb20gXCIuL3BvbHlnb25cIjtcbmltcG9ydCB7IFZlY3RvcjIgfSBmcm9tIFwiLi92ZWN0b3IyXCI7XG5cbmV4cG9ydCBjbGFzcyBQb2xQbG90IHtcbiAgbGluZXM6IExpbmVbXSA9IFtdO1xuICBpbnRlcnNlY3Rpb25UaW1lczogbnVtYmVyW11bXSA9IFtdO1xuICBpbnRlcnNlY3Rpb25Qb2ludHM6IFZlY3RvcjJbXVtdID0gW107XG4gIGNvbnN0cnVjdG9yKHJlYWRvbmx5IHJlbmRlcmVyOiBQb2xwbG90UmVuZGVyZXIpIHtcbiAgICBsZXQgZHJhZ2dlZExpbmU6IExpbmU7XG4gICAgbGV0IGRyYWdnZWRWZWN0b3IyOiBWZWN0b3IyO1xuXG4gICAgdGhpcy5yZW5kZXJlci5zZXRNb3VzZURvd25IYW5kbGVyKChldmVudCwgY2xpY2tlZExpbmUsIGNsaWNrZWRWZWN0b3IyKSA9PiB7XG4gICAgICBkcmFnZ2VkTGluZSA9IGNsaWNrZWRMaW5lIHx8IG51bGw7XG4gICAgICBkcmFnZ2VkVmVjdG9yMiA9IGNsaWNrZWRWZWN0b3IyIHx8IG51bGw7XG4gICAgICBpZiAoIWRyYWdnZWRMaW5lKSB7XG4gICAgICAgIGRyYWdnZWRMaW5lID0gbmV3IExpbmUoZXZlbnQuY2xpZW50WCwgZXZlbnQuY2xpZW50WSwgZXZlbnQuY2xpZW50WCwgZXZlbnQuY2xpZW50WSk7XG4gICAgICAgIGRyYWdnZWRWZWN0b3IyID0gZHJhZ2dlZExpbmUudjI7XG4gICAgICAgIHRoaXMuYWRkTGluZShkcmFnZ2VkTGluZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBsZXQgc2VsZWN0ZWRMaW5lOiBMaW5lO1xuICAgIHRoaXMucmVuZGVyZXIuc2V0TW91c2VVcEhhbmRsZXIoKGV2ZW50LCBjbGlja2VkTGluZSwgY2xpY2tlZFZlY3RvcjIpID0+IHtcbiAgICAgIGlmIChjbGlja2VkTGluZSkge1xuICAgICAgICBpZiAoc2VsZWN0ZWRMaW5lICYmIHNlbGVjdGVkTGluZSAhPT0gY2xpY2tlZExpbmUpIHtcbiAgICAgICAgICB0aGlzLnJlbmRlcmVyLmRyYXdMaW5lKHNlbGVjdGVkTGluZSwgY2xpY2tlZExpbmUgPT09IGhvdmVyZWRMaW5lLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZWN0ZWRMaW5lID0gY2xpY2tlZExpbmU7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuZHJhd0xpbmUoc2VsZWN0ZWRMaW5lLCBjbGlja2VkTGluZSA9PT0gaG92ZXJlZExpbmUsIHRydWUpO1xuICAgICAgfSBlbHNlIGlmIChzZWxlY3RlZExpbmUpIHtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5kcmF3TGluZShzZWxlY3RlZExpbmUsIGNsaWNrZWRMaW5lID09PSBob3ZlcmVkTGluZSwgZmFsc2UpO1xuICAgICAgfVxuICAgICAgZHJhZ2dlZExpbmUgPSBudWxsO1xuICAgICAgZHJhZ2dlZFZlY3RvcjIgPSBudWxsO1xuICAgIH0pO1xuXG4gICAgbGV0IGhvdmVyZWRMaW5lOiBMaW5lO1xuICAgIHRoaXMucmVuZGVyZXIuc2V0TW91c2VNb3ZlSGFuZGxlcigoZXZlbnQsIGNsaWNrZWRMaW5lLCBjbGlja2VkVmVjdG9yMikgPT4ge1xuICAgICAgaWYgKGNsaWNrZWRMaW5lKSB7XG4gICAgICAgIGlmIChob3ZlcmVkTGluZSAmJiBob3ZlcmVkTGluZSAhPT0gY2xpY2tlZExpbmUpIHtcbiAgICAgICAgICB0aGlzLnJlbmRlcmVyLmRyYXdMaW5lKGhvdmVyZWRMaW5lLCBmYWxzZSwgY2xpY2tlZExpbmUgPT09IHNlbGVjdGVkTGluZSk7XG4gICAgICAgIH1cbiAgICAgICAgaG92ZXJlZExpbmUgPSBjbGlja2VkTGluZTtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5kcmF3TGluZShob3ZlcmVkTGluZSwgdHJ1ZSwgY2xpY2tlZExpbmUgPT09IHNlbGVjdGVkTGluZSk7IFxuICAgICAgfSBlbHNlIGlmIChob3ZlcmVkTGluZSkge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLmRyYXdMaW5lKGhvdmVyZWRMaW5lLCBmYWxzZSwgY2xpY2tlZExpbmUgPT09IHNlbGVjdGVkTGluZSk7XG4gICAgICAgIGhvdmVyZWRMaW5lID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIGlmIChkcmFnZ2VkTGluZSkge1xuICAgICAgICBpZiAoZHJhZ2dlZFZlY3RvcjIpIHtcbiAgICAgICAgICBkcmFnZ2VkVmVjdG9yMi54ID0gZXZlbnQuY2xpZW50WDtcbiAgICAgICAgICBkcmFnZ2VkVmVjdG9yMi55ID0gZXZlbnQuY2xpZW50WTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkcmFnZ2VkTGluZS51cGRhdGUoZXZlbnQubW92ZW1lbnRYLCBldmVudC5tb3ZlbWVudFksIGV2ZW50Lm1vdmVtZW50WCwgZXZlbnQubW92ZW1lbnRZKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVwZGF0ZUludGVyc2VjdGlvblRpbWVzKGRyYWdnZWRMaW5lKTtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5kcmF3TGluZShkcmFnZ2VkTGluZSwgZHJhZ2dlZExpbmUgPT09IGhvdmVyZWRMaW5lLCBkcmFnZ2VkTGluZSA9PT0gc2VsZWN0ZWRMaW5lKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBhZGRMaW5lKGxpbmU6IExpbmUpOiB2b2lkIHtcbiAgICB0aGlzLmFkZEludGVyc2VjdGlvblRpbWVzKGxpbmUpO1xuICAgIHRoaXMubGluZXMucHVzaChsaW5lKTtcbiAgICB0aGlzLnJlbmRlcmVyLmRyYXdMaW5lKGxpbmUsIGZhbHNlLCBmYWxzZSk7XG4gIH1cbiAgYWRkSW50ZXJzZWN0aW9uVGltZXMobGluZTogTGluZSk6IHZvaWQge1xuICAgIGNvbnN0IGludGVyc2VjdGlvblRpbWVzOiBudW1iZXJbXSA9IFtdO1xuICAgIGNvbnN0IGludGVyc2VjdGlvblBvaW50czogVmVjdG9yMltdID0gW107XG4gICAgbGV0IHRpbWVzOiBWZWN0b3IyO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5saW5lcy5sZW5ndGg7IGkrKykge1xuICAgICAgdGltZXMgPSB0aGlzLmxpbmVzW2ldLmludGVyc2VjdGlvblRpbWVzV2l0aChsaW5lKTtcbiAgICAgIHRoaXMuaW50ZXJzZWN0aW9uVGltZXNbaV0ucHVzaCh0aW1lcy54KTtcbiAgICAgIHRoaXMuaW50ZXJzZWN0aW9uUG9pbnRzW2ldLnB1c2goXG4gICAgICAgIDAgPD0gdGltZXMueCAmJiB0aW1lcy54IDw9IDEgJiYgMCA8PSB0aW1lcy55ICYmIHRpbWVzLnkgPD0gMVxuICAgICAgICAgID8gdGhpcy5saW5lc1tpXS52MS5hZGQodGhpcy5saW5lc1tpXS52Mi5zdWIodGhpcy5saW5lc1tpXS52MSkubXVsKHRpbWVzLngpKVxuICAgICAgICAgIDogbnVsbFxuICAgICAgKTtcbiAgICAgIGludGVyc2VjdGlvblRpbWVzLnB1c2godGltZXMueSk7XG4gICAgICBpbnRlcnNlY3Rpb25Qb2ludHMucHVzaChudWxsKTtcbiAgICB9XG4gICAgaW50ZXJzZWN0aW9uVGltZXMucHVzaChOYU4pO1xuICAgIGludGVyc2VjdGlvblBvaW50cy5wdXNoKG51bGwpO1xuICAgIHRoaXMuaW50ZXJzZWN0aW9uVGltZXMucHVzaChpbnRlcnNlY3Rpb25UaW1lcyk7XG4gICAgdGhpcy5pbnRlcnNlY3Rpb25Qb2ludHMucHVzaChpbnRlcnNlY3Rpb25Qb2ludHMpO1xuICAgIHRoaXMucmVuZGVySW50ZXJzZWN0aW9ucygpO1xuICB9XG4gIHVwZGF0ZUludGVyc2VjdGlvblRpbWVzKGxpbmU6IExpbmUpOiB2b2lkIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMubGluZXMuaW5kZXhPZihsaW5lKTtcbiAgICBsZXQgdGltZXM6IFZlY3RvcjI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoaSAhPT0gaW5kZXgpIHtcbiAgICAgICAgdGltZXMgPSB0aGlzLmxpbmVzW2ldLmludGVyc2VjdGlvblRpbWVzV2l0aChsaW5lKTtcbiAgICAgICAgdGhpcy5pbnRlcnNlY3Rpb25UaW1lc1tpXVtpbmRleF0gPSB0aW1lcy54O1xuICAgICAgICB0aGlzLmludGVyc2VjdGlvblRpbWVzW2luZGV4XVtpXSA9IHRpbWVzLnk7XG4gICAgICAgIGlmIChpIDwgaW5kZXgpIHtcbiAgICAgICAgICB0aGlzLmludGVyc2VjdGlvblBvaW50c1tpXVtpbmRleF0gPSAwIDw9IHRpbWVzLnggJiYgdGltZXMueCA8PSAxICYmIDAgPD0gdGltZXMueSAmJiB0aW1lcy55IDw9IDFcbiAgICAgICAgICAgID8gdGhpcy5saW5lc1tpXS52MS5hZGQodGhpcy5saW5lc1tpXS52Mi5zdWIodGhpcy5saW5lc1tpXS52MSkubXVsKHRpbWVzLngpKVxuICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuaW50ZXJzZWN0aW9uUG9pbnRzW2luZGV4XVtpXSA9IDAgPD0gdGltZXMueCAmJiB0aW1lcy54IDw9IDEgJiYgMCA8PSB0aW1lcy55ICYmIHRpbWVzLnkgPD0gMVxuICAgICAgICAgICAgPyB0aGlzLmxpbmVzW2ldLnYxLmFkZCh0aGlzLmxpbmVzW2ldLnYyLnN1Yih0aGlzLmxpbmVzW2ldLnYxKS5tdWwodGltZXMueCkpXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5yZW5kZXJJbnRlcnNlY3Rpb25zKCk7XG4gIH1cbiAgcmVuZGVySW50ZXJzZWN0aW9ucygpOiB2b2lkIHtcbiAgICB0aGlzLnJlbmRlcmVyLmNsZWFySW50ZXJzZWN0aW9ucygpO1xuICAgIHRoaXMuaW50ZXJzZWN0aW9uUG9pbnRzLmZvckVhY2goaW50ZXJzZWN0aW9uUG9pbnRzID0+IHtcbiAgICAgIGludGVyc2VjdGlvblBvaW50cy5mb3JFYWNoKGludGVyc2VjdGlvblBvaW50ID0+IHtcbiAgICAgICAgaWYgKGludGVyc2VjdGlvblBvaW50KSB7XG4gICAgICAgICAgdGhpcy5yZW5kZXJlci5kcmF3UG9pbnQoaW50ZXJzZWN0aW9uUG9pbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB0aGlzLnJlbmRlcmVyLmNsZWFyUG9seWdvbnMoKTtcbiAgICB0aGlzLmJ1aWxkUG9seWdvbnNGcm9tSW50ZXJzZWN0aW9uVGltZXMoKVxuICAgICAgLmZvckVhY2gocG9seWdvbiA9PiB0aGlzLnJlbmRlcmVyLmRyYXdQb2x5Z29uKHBvbHlnb24pKTtcbiAgfVxuICB0ZXN0U2lkZSh1OiBWZWN0b3IyLCB2OiBWZWN0b3IyLCB3OiBWZWN0b3IyKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHYuc3ViKHUpLmNyb3NzKHcuc3ViKHUpKSA+IDA7XG4gIH1cbiAgYnVpbGRQb2x5Z29uc0Zyb21JbnRlcnNlY3Rpb25UaW1lcygpOiBQb2x5Z29uW10ge1xuICAgIGNvbnN0IGludGVyc2VjdGlvblRpbWVzU29ydGVkSW5kZXhBcnJheSA9IHRoaXMuaW50ZXJzZWN0aW9uVGltZXNcbiAgICAgIC5tYXAoaW50ZXJzZWN0aW9uVGltZXMgPT4ge1xuICAgICAgICByZXR1cm4gaW50ZXJzZWN0aW9uVGltZXNcbiAgICAgICAgICAubWFwKChfLCBpKSA9PiBpKVxuICAgICAgICAgIC5maWx0ZXIoaSA9PiAhaXNOYU4oaW50ZXJzZWN0aW9uVGltZXNbaV0pICYmIDAgPD0gaW50ZXJzZWN0aW9uVGltZXNbaV0gJiYgaW50ZXJzZWN0aW9uVGltZXNbaV0gPD0gMSlcbiAgICAgICAgICAuc29ydCgoaSwgaikgPT4gaW50ZXJzZWN0aW9uVGltZXNbaV0gLSBpbnRlcnNlY3Rpb25UaW1lc1tqXSk7XG4gICAgICB9KTtcbiAgICBjb25zdCBwb2x5Z29uczogUG9seWdvbltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnRlcnNlY3Rpb25UaW1lc1NvcnRlZEluZGV4QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgaW50ZXJzZWN0aW9uVGltZXNTb3J0ZWRJbmRleEFycmF5W2ldLmxlbmd0aCAtIDE7IGorKykge1xuICAgICAgICBsZXQgcGs6IG51bWJlcjtcbiAgICAgICAgbGV0IHBsOiBudW1iZXI7XG4gICAgICAgIGxldCBrID0gaTtcbiAgICAgICAgbGV0IGwgPSBqO1xuICAgICAgICBjb25zdCBwb2x5Z29uOiBWZWN0b3IyW10gPSBbXG4gICAgICAgICAgLy8gZmlyc3QgcG9pbnQgb24gb3JpZ2luYWwgbGluZVxuICAgICAgICAgIHRoaXMubGluZXNba10ucG9pbnRBdCh0aGlzLmludGVyc2VjdGlvblRpbWVzW2tdW2ludGVyc2VjdGlvblRpbWVzU29ydGVkSW5kZXhBcnJheVtrXVtsXV0pLFxuICAgICAgICAgIC8vIHNlY29uZCBwb2ludCBvbiBvcmlnaW5hbCBsaW5lICh0aGUgbmV4dCBpbnRlcnNlY3Rpb24pXG4gICAgICAgICAgdGhpcy5saW5lc1trXS5wb2ludEF0KHRoaXMuaW50ZXJzZWN0aW9uVGltZXNba11baW50ZXJzZWN0aW9uVGltZXNTb3J0ZWRJbmRleEFycmF5W2tdW2wgKyAxXV0pLFxuICAgICAgICBdO1xuICAgICAgICAvLyBza2lwIGlmIGN1cnJlbnQgZWRnZSBpcyBhbHJlYWR5IG9uIGFuIG90aGVyIHBvbHlnb25cbiAgICAgICAgLy8gaWYgKHBvbHlnb25zLnNvbWUocCA9PiBwLnNoYXJlRWRnZShwb2x5Z29uWzBdLCBwb2x5Z29uWzFdKSkpIHtcbiAgICAgICAgLy8gICBicmVhaztcbiAgICAgICAgLy8gfVxuICAgICAgICBsICs9IDE7XG4gICAgICAgIGxldCBJID0gMDtcbiAgICAgICAgbGV0IGNsb3NlZCA9IGZhbHNlO1xuICAgICAgICB3aGlsZSAodHJ1ZSAmJiBJKysgPCAxZTMpIHtcbiAgICAgICAgICBwayA9IGs7XG4gICAgICAgICAgcGwgPSBsO1xuICAgICAgICAgIC8vIHN3aXRjaCB0byB0aGUgbGluZSBpbnRlcnNlY3RlZCBhdCBwcmV2aW91cyBwb2ludFxuICAgICAgICAgIGsgPSBpbnRlcnNlY3Rpb25UaW1lc1NvcnRlZEluZGV4QXJyYXlba11bbF07XG4gICAgICAgICAgaWYgKHR5cGVvZiBrICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIHJldHJpZXZlIHRoZSBpbmRleCBvZiBwcmV2aW91cyBpbnRlcnNlY3Rpb24gb24gbmV3IGxpbmVcbiAgICAgICAgICBsID0gaW50ZXJzZWN0aW9uVGltZXNTb3J0ZWRJbmRleEFycmF5W2tdLmZpbmRJbmRleChtID0+IG0gPT09IHBrKTtcbiAgICAgICAgICBpZiAodHlwZW9mIGwgIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3InKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gb3B0aW9ubmFsbHlcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAwIDwgbCAmJiB0aGlzLnRlc3RTaWRlKFxuICAgICAgICAgICAgICBwb2x5Z29uW3BvbHlnb24ubGVuZ3RoIC0gMl0sXG4gICAgICAgICAgICAgIHRoaXMubGluZXNba10ucG9pbnRBdCh0aGlzLmludGVyc2VjdGlvblRpbWVzW2tdW2ludGVyc2VjdGlvblRpbWVzU29ydGVkSW5kZXhBcnJheVtrXVtsIC0gMV1dKSxcbiAgICAgICAgICAgICAgcG9seWdvbltwb2x5Z29uLmxlbmd0aCAtIDFdLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICkge1xuICAgICAgICAgICAgbCAtPSAxO1xuICAgICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgICBsIDwgaW50ZXJzZWN0aW9uVGltZXNTb3J0ZWRJbmRleEFycmF5W2tdLmxlbmd0aCAtIDEgJiYgdGhpcy50ZXN0U2lkZShcbiAgICAgICAgICAgICAgcG9seWdvbltwb2x5Z29uLmxlbmd0aCAtIDJdLFxuICAgICAgICAgICAgICB0aGlzLmxpbmVzW2tdLnBvaW50QXQodGhpcy5pbnRlcnNlY3Rpb25UaW1lc1trXVtpbnRlcnNlY3Rpb25UaW1lc1NvcnRlZEluZGV4QXJyYXlba11bbCArIDFdXSksXG4gICAgICAgICAgICAgIHBvbHlnb25bcG9seWdvbi5sZW5ndGggLSAxXSxcbiAgICAgICAgICAgIClcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIGwgKz0gMTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvbHlnb24ucHVzaCh0aGlzLmxpbmVzW2tdLnBvaW50QXQodGhpcy5pbnRlcnNlY3Rpb25UaW1lc1trXVtpbnRlcnNlY3Rpb25UaW1lc1NvcnRlZEluZGV4QXJyYXlba11bbF1dKSk7XG4gICAgICAgICAgLy8gaWYgbGFzdCBwdXNoZWQgcG9pbnQgaXMgZXF1YWxzIHRvIHRoZSBmaXJzdCwgY2xvc2VkIHRoZSBwb2x5Z29uXG4gICAgICAgICAgaWYgKHBvbHlnb25bMF0uZXF1YWxzKHBvbHlnb25bcG9seWdvbi5sZW5ndGggLSAxXSkpIHtcbiAgICAgICAgICAgIHBvbHlnb24ucG9wKCk7XG4gICAgICAgICAgICBjbG9zZWQgPSB0cnVlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpID09PSAxZTMpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ3RvbyBtYW55IGxvb3BzJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNsb3NlZCkge1xuICAgICAgICAgIHBvbHlnb25zLnB1c2gobmV3IFBvbHlnb24ocG9seWdvbikpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwb2x5Z29ucztcbiAgfVxufSIsImltcG9ydCB7IENsaWNrSGFuZGxlciwgUG9scGxvdFJlbmRlcmVyIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy9wb2xwbG90LXJlbmRlcmVyXCI7XG5pbXBvcnQgeyBMaW5lIH0gZnJvbSBcIi4vbGluZVwiO1xuaW1wb3J0IHsgUG9seWdvbiB9IGZyb20gXCIuL3BvbHlnb25cIjtcbmltcG9ydCB7IFZlY3RvcjIgfSBmcm9tIFwiLi92ZWN0b3IyXCI7XG5cbmNvbnN0IGdUZW1wbGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAnZycpO1xuZ1RlbXBsYXRlLnNldEF0dHJpYnV0ZSgnc3Ryb2tlJywgJ2JsYWNrJyk7XG5nVGVtcGxhdGUuc2V0QXR0cmlidXRlKCdzdHJva2Utd2lkdGgnLCAnMC40cHgnKTtcblxuY29uc3QgbGluZVRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdsaW5lJyk7XG5saW5lVGVtcGxhdGUuc2V0QXR0cmlidXRlKCdzdHJva2UtZGFzaGFycmF5JywgJzEwLCA0LCAxLCA0Jyk7XG5cbmNvbnN0IGFuY2hvclRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdwYXRoJyk7XG5hbmNob3JUZW1wbGF0ZS5zZXRBdHRyaWJ1dGUoXG4gICdkJyxcbiAgJ00gMCwgMCcgK1xuICAnQSAxMCwgMTAsIDAsIDAsIDAsIC01LCAtNScgKyBcbiAgJ0EgMTAsIDEwLCAwLCAxLCAxLCA1LCAtNScgK1xuICAnQSAxMCwgMTAsIDAsIDAsIDAsIDAsIDAnXG4pO1xuYW5jaG9yVGVtcGxhdGUuc2V0QXR0cmlidXRlKCdmaWxsJywgJ3doaXRlJyk7XG5cbmdUZW1wbGF0ZS5hcHBlbmRDaGlsZChsaW5lVGVtcGxhdGUpO1xuZ1RlbXBsYXRlLmFwcGVuZENoaWxkKGFuY2hvclRlbXBsYXRlKTtcbmdUZW1wbGF0ZS5hcHBlbmRDaGlsZChhbmNob3JUZW1wbGF0ZS5jbG9uZU5vZGUoKSk7XG5cbmNvbnN0IHBvaW50VGVtcGxhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ2NpcmNsZScpO1xucG9pbnRUZW1wbGF0ZS5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnZ3JlZW4nKTtcbnBvaW50VGVtcGxhdGUuc2V0QXR0cmlidXRlKCdyJywgJzMnKTtcblxuY29uc3QgcG9seWdvblRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdwYXRoJyk7XG5wb2x5Z29uVGVtcGxhdGUuc2V0QXR0cmlidXRlKCdmaWxsJywgJ2dyZWVuJyk7XG5wb2x5Z29uVGVtcGxhdGUuc2V0QXR0cmlidXRlKCdzdHJva2Utd2lkdGgnLCAnMycpO1xucG9seWdvblRlbXBsYXRlLnNldEF0dHJpYnV0ZSgnc3Ryb2tlJywgJ2dyZXknKTtcblxuZXhwb3J0IGNsYXNzIFN2Z1JlbmRlcmVyIGltcGxlbWVudHMgUG9scGxvdFJlbmRlcmVyIHtcbiAgcmVhZG9ubHkgc3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdzdmcnKTtcbiAgcHJpdmF0ZSBpbnRlcnNlY3Rpb25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ2cnKTtcbiAgcHJpdmF0ZSBwb2x5Z29uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdnJyk7XG4gIHByaXZhdGUgc3ZnR0J5TGluZSA9IG5ldyBNYXA8TGluZSwgU1ZHR0VsZW1lbnQ+KCk7XG4gIHByaXZhdGUgbGluZUJ5U3ZnRyA9IG5ldyBNYXA8U1ZHR0VsZW1lbnQsIExpbmU+KCk7XG4gIHByaXZhdGUgb25Nb3VzZURvd246IChldmVudDogTW91c2VFdmVudCkgPT4gYW55O1xuICBwcml2YXRlIG9uTW91c2VVcDogKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiBhbnk7XG4gIHByaXZhdGUgb25Nb3VzZU1vdmU6IChldmVudDogTW91c2VFdmVudCkgPT4gYW55O1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnN2Zy5hcHBlbmRDaGlsZCh0aGlzLmludGVyc2VjdGlvbkNvbnRhaW5lcik7XG4gICAgdGhpcy5zdmcuYXBwZW5kQ2hpbGQodGhpcy5wb2x5Z29uQ29udGFpbmVyKTtcbiAgfVxuICBjbGlja0hhbmRsZXJXcmFwcGVyKGNsaWNrSGFuZGxlcjogQ2xpY2tIYW5kbGVyKTogKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiBhbnkge1xuICAgIHJldHVybiBldmVudCA9PiB7XG4gICAgICBjb25zdCBlbGVtZW50QXQgPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KGV2ZW50LmNsaWVudFgsIGV2ZW50LmNsaWVudFkpO1xuICAgICAgY29uc3QgbGluZSA9IHRoaXMubGluZUJ5U3ZnRy5nZXQoZWxlbWVudEF0LnBhcmVudE5vZGUgYXMgU1ZHR0VsZW1lbnQpO1xuICAgICAgaWYgKGVsZW1lbnRBdCBpbnN0YW5jZW9mIFNWR1BhdGhFbGVtZW50ICYmIGVsZW1lbnRBdC5wYXJlbnROb2RlICE9PSB0aGlzLnBvbHlnb25Db250YWluZXIpIHtcbiAgICAgICAgaWYgKGVsZW1lbnRBdC5wYXJlbnROb2RlLmNoaWxkcmVuWzFdID09PSBlbGVtZW50QXQpIHtcbiAgICAgICAgICBjbGlja0hhbmRsZXIoZXZlbnQsIGxpbmUsIGxpbmUudjEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNsaWNrSGFuZGxlcihldmVudCwgbGluZSwgbGluZS52Mik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZWxlbWVudEF0IGluc3RhbmNlb2YgU1ZHTGluZUVsZW1lbnQpIHtcbiAgICAgICAgY2xpY2tIYW5kbGVyKGV2ZW50LCBsaW5lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNsaWNrSGFuZGxlcihldmVudCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBzZXRNb3VzZURvd25IYW5kbGVyKGNsaWNrSGFuZGxlcjogQ2xpY2tIYW5kbGVyKTogdm9pZCB7XG4gICAgaWYgKHRoaXMub25Nb3VzZURvd24pIHtcbiAgICAgIHRoaXMuc3ZnLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMub25Nb3VzZURvd24pO1xuICAgIH1cbiAgICB0aGlzLm9uTW91c2VEb3duID0gdGhpcy5jbGlja0hhbmRsZXJXcmFwcGVyKGNsaWNrSGFuZGxlcik7XG4gICAgdGhpcy5zdmcuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5vbk1vdXNlRG93bik7XG4gIH1cbiAgc2V0TW91c2VVcEhhbmRsZXIoY2xpY2tIYW5kbGVyOiBDbGlja0hhbmRsZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5vbk1vdXNlVXApIHtcbiAgICAgIHRoaXMuc3ZnLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLm9uTW91c2VVcCk7XG4gICAgfVxuICAgIHRoaXMub25Nb3VzZVVwID0gdGhpcy5jbGlja0hhbmRsZXJXcmFwcGVyKGNsaWNrSGFuZGxlcik7XG4gICAgdGhpcy5zdmcuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMub25Nb3VzZVVwKTtcbiAgfVxuICBzZXRNb3VzZU1vdmVIYW5kbGVyKGNsaWNrSGFuZGxlcjogQ2xpY2tIYW5kbGVyKTogdm9pZCB7XG4gICAgaWYgKHRoaXMub25Nb3VzZU1vdmUpIHtcbiAgICAgIHRoaXMuc3ZnLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMub25Nb3VzZU1vdmUpO1xuICAgIH1cbiAgICB0aGlzLm9uTW91c2VNb3ZlID0gdGhpcy5jbGlja0hhbmRsZXJXcmFwcGVyKGNsaWNrSGFuZGxlcik7XG4gICAgdGhpcy5zdmcuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5vbk1vdXNlTW92ZSk7XG4gIH1cbiAgZHJhd0xpbmUobGluZTogTGluZSwgaXNIb3ZlcmVkID0gZmFsc2UsIGlzU2VsZWN0ZWQgPSBmYWxzZSk6IHZvaWQge1xuICAgIGxldCBzdmdHOiBTVkdHRWxlbWVudDtcbiAgICBpZiAoIXRoaXMuc3ZnR0J5TGluZS5oYXMobGluZSkpIHtcbiAgICAgIHN2Z0cgPSBnVGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpIGFzIFNWR0dFbGVtZW50O1xuICAgICAgdGhpcy5zdmcuYXBwZW5kQ2hpbGQoc3ZnRyk7XG4gICAgICB0aGlzLnN2Z0dCeUxpbmUuc2V0KGxpbmUsIHN2Z0cpO1xuICAgICAgdGhpcy5saW5lQnlTdmdHLnNldChzdmdHLCBsaW5lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3ZnRyA9IHRoaXMuc3ZnR0J5TGluZS5nZXQobGluZSk7XG4gICAgfVxuICAgIGNvbnN0IHN2Z0xpbmUgPSBzdmdHLmNoaWxkcmVuWzBdIGFzIFNWR0xpbmVFbGVtZW50O1xuICAgIGNvbnN0IHN2Z1BhdGhBbmNob3JTdGFydCA9IHN2Z0cuY2hpbGRyZW5bMV0gYXMgU1ZHUGF0aEVsZW1lbnQ7XG4gICAgY29uc3Qgc3ZnUGF0aEFuY2hvckVuZCA9IHN2Z0cuY2hpbGRyZW5bMl0gYXMgU1ZHUGF0aEVsZW1lbnQ7XG4gICAgY29uc3QgeDEgPSBsaW5lLngxLnRvRml4ZWQoKTtcbiAgICBjb25zdCB5MSA9IGxpbmUueTEudG9GaXhlZCgpO1xuICAgIGNvbnN0IHgyID0gbGluZS54Mi50b0ZpeGVkKCk7XG4gICAgY29uc3QgeTIgPSBsaW5lLnkyLnRvRml4ZWQoKTtcbiAgICBzdmdMaW5lLnNldEF0dHJpYnV0ZSgneDEnLCB4MSk7XG4gICAgc3ZnTGluZS5zZXRBdHRyaWJ1dGUoJ3kxJywgeTEpO1xuICAgIHN2Z0xpbmUuc2V0QXR0cmlidXRlKCd4MicsIHgyKTtcbiAgICBzdmdMaW5lLnNldEF0dHJpYnV0ZSgneTInLCB5Mik7XG4gICAgaWYgKGlzSG92ZXJlZCkge1xuICAgICAgc3ZnRy5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS13aWR0aCcsICcwLjhweCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdmdHLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLXdpZHRoJywgJzAuNHB4Jyk7XG4gICAgfVxuICAgIGlmIChpc1NlbGVjdGVkKSB7XG4gICAgICBzdmdHLnNldEF0dHJpYnV0ZSgnc3Ryb2tlJywgJyMxOWExOTQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3ZnRy5zZXRBdHRyaWJ1dGUoJ3N0cm9rZScsICdibGFjaycpO1xuICAgIH1cbiAgICBjb25zdCBhbmdsZSA9IDE4MCAqIChsaW5lLnYyLnN1YihsaW5lLnYxKS5hbmdsZSgpIC0gTWF0aC5QSSAvIDIpIC8gTWF0aC5QSTtcbiAgICBzdmdQYXRoQW5jaG9yU3RhcnQuc2V0QXR0cmlidXRlKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlKCR7eDF9LCAke3kxfSkgcm90YXRlKCR7aXNOYU4oYW5nbGUpID8gMCA6IGFuZ2xlfSlgKTtcbiAgICBzdmdQYXRoQW5jaG9yRW5kLnNldEF0dHJpYnV0ZSgndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgke3gyfSwgJHt5Mn0pIHJvdGF0ZSgke2lzTmFOKGFuZ2xlKSA/IDAgOiAxODAgKyBhbmdsZX0pYCk7XG4gIH1cbiAgZXJhc2VMaW5lKGxpbmU6IExpbmUpOiB2b2lkIHtcbiAgICBjb25zdCBzdmdHID0gdGhpcy5zdmdHQnlMaW5lLmdldChsaW5lKTtcbiAgICBpZiAoc3ZnRykge1xuICAgICAgdGhpcy5zdmcucmVtb3ZlQ2hpbGQoc3ZnRyk7XG4gICAgICB0aGlzLnN2Z0dCeUxpbmUuZGVsZXRlKGxpbmUpO1xuICAgIH1cbiAgfVxuICBkcmF3UG9pbnQocG9pbnQ6IFZlY3RvcjIpOiB2b2lkIHtcbiAgICBjb25zdCBzdmdDaXJjbGUgPSBwb2ludFRlbXBsYXRlLmNsb25lTm9kZSgpIGFzIFNWR0NpcmNsZUVsZW1lbnQ7XG4gICAgc3ZnQ2lyY2xlLnNldEF0dHJpYnV0ZSgnY3gnLCBwb2ludC54LnRvRml4ZWQoKSk7XG4gICAgc3ZnQ2lyY2xlLnNldEF0dHJpYnV0ZSgnY3knLCBwb2ludC55LnRvRml4ZWQoKSk7XG4gICAgdGhpcy5pbnRlcnNlY3Rpb25Db250YWluZXIuYXBwZW5kQ2hpbGQoc3ZnQ2lyY2xlKTtcbiAgfVxuICBjbGVhckludGVyc2VjdGlvbnMoKTogdm9pZCB7XG4gICAgdGhpcy5pbnRlcnNlY3Rpb25Db250YWluZXIuY2hpbGROb2Rlcy5mb3JFYWNoKGNoaWxkTm9kZSA9PiB0aGlzLmludGVyc2VjdGlvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChjaGlsZE5vZGUpKTtcbiAgfVxuICBkcmF3UG9seWdvbihwb2x5Z29uOiBQb2x5Z29uKTogdm9pZCB7XG4gICAgY29uc3Qgc3ZnUGF0aCA9IHBvbHlnb25UZW1wbGF0ZS5jbG9uZU5vZGUoKSBhcyBTVkdQYXRoRWxlbWVudDtcbiAgICBzdmdQYXRoLnNldEF0dHJpYnV0ZSgnZCcsICdNJyArIHBvbHlnb24udmVydGljZXMubWFwKHYgPT4gYCR7di54fSAke3YueX1gKS5qb2luKCcgTCAnKSArICdaJyk7XG4gICAgc3ZnUGF0aC5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnIycgKyAoTWF0aC5mbG9vcigxNjc3NzIxNSAqIE1hdGgucmFuZG9tKCkpKS50b1N0cmluZygxNikpO1xuICAgIHRoaXMucG9seWdvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChzdmdQYXRoKTtcbiAgfVxuICBjbGVhclBvbHlnb25zKCk6IHZvaWQge1xuICAgIHRoaXMucG9seWdvbkNvbnRhaW5lci5jaGlsZE5vZGVzLmZvckVhY2goY2hpbGROb2RlID0+IHRoaXMucG9seWdvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChjaGlsZE5vZGUpKTtcbiAgfVxufSIsImltcG9ydCB7IFBvbFBsb3QgfSBmcm9tIFwiLi9wb2xwbG90XCI7XG5pbXBvcnQgeyBTdmdSZW5kZXJlciB9IGZyb20gXCIuL3N2Zy1yZW5kZXJlclwiO1xuXG5jb25zdCBzdmdSZW5kZXJlciA9IG5ldyBTdmdSZW5kZXJlcigpO1xuY29uc3QgcG9scGxvdCA9IG5ldyBQb2xQbG90KHN2Z1JlbmRlcmVyKTtcbmNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG5ib2R5LmFwcGVuZENoaWxkKHN2Z1JlbmRlcmVyLnN2Zyk7Il0sInNvdXJjZVJvb3QiOiIifQ==