(()=>{"use strict";var t=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.dotRaw=function(t,e,n,i){return t*n+e*i},t.dot=function(t,e){return this.dotRaw(t.x,t.y,e.x,e.y)},t.prototype.dot=function(e){return t.dot(this,e)},t.crossRaw=function(t,e,n,i){return t*i-n*e},t.cross=function(t,e){return this.crossRaw(t.x,t.y,e.x,e.y)},t.prototype.cross=function(e){return t.cross(this,e)},t.lenRaw=function(t,e){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2))},t.len=function(t){return this.lenRaw(t.x,t.y)},t.prototype.len=function(){return t.len(this)},t.normalizeRaw=function(t,e,n){void 0===n&&(n=1);var i=n/this.lenRaw(t,e);return this.mulRaw(t,e,i)},t.normalize=function(t,e){return void 0===e&&(e=1),this.normalizeRaw(t.x,t.y,e)},t.prototype.normalize=function(e){return void 0===e&&(e=1),t.normalize(this,e)},t.equalsRaw=function(t,e,n,i){return t===n&&e===i},t.equals=function(t,e){return this.equalsRaw(t.x,t.y,e.x,e.y)},t.prototype.equals=function(e){return t.equals(this,e)},t.addRaw=function(e,n,i,r){return new t(e+i,n+r)},t.add=function(t,e){return this.addRaw(t.x,t.y,e.x,e.y)},t.prototype.add=function(e){return t.add(this,e)},t.subRaw=function(e,n,i,r){return new t(e-i,n-r)},t.sub=function(t,e){return this.subRaw(t.x,t.y,e.x,e.y)},t.prototype.sub=function(e){return t.sub(this,e)},t.mulRaw=function(e,n,i){return new t(e*i,n*i)},t.mul=function(t,e){return this.mulRaw(t.x,t.y,e)},t.prototype.mul=function(e){return t.mul(this,e)},t.intersectionTimesRaw=function(e,n,i,r,s,o,u,a){var h=this.crossRaw(i-e,r-n,u-s,a-o);return new t(this.crossRaw(u-s,a-o,e-s,n-o)/h,this.crossRaw(i-e,r-n,e-s,n-o)/h)},t.intersectionTimes=function(t,e,n,i){return this.intersectionTimesRaw(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)},t.prototype.intersectionTimes=function(e,n,i){return t.intersectionTimes(this,e,n,i)},t.intersectionRaw=function(t,e,n,i,r,s,o,u){var a=this.intersectionTimesRaw(t,e,n,i,r,s,o,u);if(a)return a.y=e+(i-e)*a.x,a.x=t+(n-t)*a.x,a},t.intersection=function(t,e,n,i){return this.intersectionRaw(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)},t.prototype.intersection=function(e,n,i){return t.intersection(this,e,n,i)},t.prototype.angle=function(t){if(t){var e=this.angle(),n=t.angle();return n<e?n+2*Math.PI-e:n-e}return this.y>0?Math.acos(this.x/this.len()):2*Math.PI-Math.acos(this.x/this.len())},t}(),e=function(){function e(e,n,i,r){this.v1=new t(e,n),this.v2=new t(i,r)}return Object.defineProperty(e.prototype,"x1",{get:function(){return this.v1.x},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y1",{get:function(){return this.v1.y},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"x2",{get:function(){return this.v2.x},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y2",{get:function(){return this.v2.y},enumerable:!1,configurable:!0}),e.prototype.len=function(){return this.v2.sub(this.v1).len()},e.prototype.before=function(t){return this.v1.add(this.v2.sub(this.v1).mul(-t/this.len()))},e.prototype.after=function(t){return this.v1.add(this.v2.sub(this.v1).mul((this.len()+t)/this.len()))},e.prototype.intersectionTimesWith=function(t){return this.v1.intersectionTimes(this.v2,t.v1,t.v2)},e.prototype.update=function(t,e,n,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===i&&(i=0),this.v1.x+=t,this.v1.y+=e,this.v2.x+=n,this.v2.y+=i},e}(),n=function(){function t(t){var n,i,r,s,o=this;this.renderer=t,this.lines=[],this.intersectionTimes=[],this.renderer.setMouseDownHandler((function(t,r,s){i=s||null,(n=r||null)||(n=new e(t.clientX,t.clientY,t.clientX,t.clientY),i=n.v2,o.addLine(n))})),this.renderer.setMouseUpHandler((function(t,e,u){e?(r&&r!==e&&o.renderer.drawLine(r,e===s,!1),r=e,o.renderer.drawLine(r,e===s,!0)):r&&o.renderer.drawLine(r,e===s,!1),n=null,i=null})),this.renderer.setMouseMoveHandler((function(t,e,u){e?(s&&s!==e&&o.renderer.drawLine(s,!1,e===r),s=e,o.renderer.drawLine(s,!0,e===r)):s&&(o.renderer.drawLine(s,!1,e===r),s=null),n&&(i?(i.x=t.clientX,i.y=t.clientY):n.update(t.movementX,t.movementY,t.movementX,t.movementY),o.updateIntersectionTimes(n),o.renderer.drawLine(n,n===s,n===r))}))}return t.prototype.addLine=function(t){this.addIntersectionTimes(t),this.lines.push(t),this.renderer.drawLine(t,!1,!1)},t.prototype.addIntersectionTimes=function(t){for(var e,n=[],i=0;i<this.lines.length;i++)e=this.lines[i].intersectionTimesWith(t),this.intersectionTimes[i].push(e.x),n.push(e.y);this.intersectionTimes.push(n)},t.prototype.updateIntersectionTimes=function(t){for(var e,n=this.lines.indexOf(t),i=0;i<this.lines.length;i++)i!==n&&(e=this.lines[i].intersectionTimesWith(t),this.intersectionTimes[i][n]=e.x,this.intersectionTimes[n][i]=e.y);console.log(this.intersectionTimes)},t}(),i=document.createElementNS("http://www.w3.org/2000/svg","g");i.setAttribute("stroke","black"),i.setAttribute("stroke-width","0.4px");var r=document.createElementNS("http://www.w3.org/2000/svg","line");r.setAttribute("stroke-dasharray","10, 4, 1, 4");var s=document.createElementNS("http://www.w3.org/2000/svg","path");s.setAttribute("d","M 0, 0A 10, 10, 0, 0, 0, -5, -5A 10, 10, 0, 1, 1, 5, -5A 10, 10, 0, 0, 0, 0, 0"),s.setAttribute("fill","white"),i.appendChild(r),i.appendChild(s),i.appendChild(s.cloneNode());var o=new(function(){function t(){this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svgGByLine=new Map,this.lineBySvgG=new Map}return t.prototype.clickHandlerWrapper=function(t){var e=this;return function(n){var i=document.elementFromPoint(n.clientX,n.clientY),r=e.lineBySvgG.get(i.parentNode);i instanceof SVGPathElement?i.parentNode.children[1]===i?t(n,r,r.v1):t(n,r,r.v2):i instanceof SVGLineElement?t(n,r):t(n)}},t.prototype.setMouseDownHandler=function(t){this.onMouseDown&&this.svg.removeEventListener("mousedown",this.onMouseDown),this.onMouseDown=this.clickHandlerWrapper(t),this.svg.addEventListener("mousedown",this.onMouseDown)},t.prototype.setMouseUpHandler=function(t){this.onMouseUp&&this.svg.removeEventListener("mouseup",this.onMouseUp),this.onMouseUp=this.clickHandlerWrapper(t),this.svg.addEventListener("mouseup",this.onMouseUp)},t.prototype.setMouseMoveHandler=function(t){this.onMouseMove&&this.svg.removeEventListener("mousemove",this.onMouseMove),this.onMouseMove=this.clickHandlerWrapper(t),this.svg.addEventListener("mousemove",this.onMouseMove)},t.prototype.drawLine=function(t,e,n){var r;void 0===e&&(e=!1),void 0===n&&(n=!1),this.svgGByLine.has(t)?r=this.svgGByLine.get(t):(r=i.cloneNode(!0),this.svg.appendChild(r),this.svgGByLine.set(t,r),this.lineBySvgG.set(r,t));var s=r.children[0],o=r.children[1],u=r.children[2],a=t.x1.toFixed(),h=t.y1.toFixed(),c=t.x2.toFixed(),d=t.y2.toFixed();s.setAttribute("x1",a),s.setAttribute("y1",h),s.setAttribute("x2",c),s.setAttribute("y2",d),e?r.setAttribute("stroke-width","0.8px"):r.setAttribute("stroke-width","0.4px"),n?r.setAttribute("stroke","#19a194"):r.setAttribute("stroke","black");var l=180*(t.v2.sub(t.v1).angle()-Math.PI/2)/Math.PI;o.setAttribute("transform","translate("+a+", "+h+") rotate("+(isNaN(l)?0:l)+")"),u.setAttribute("transform","translate("+c+", "+d+") rotate("+(isNaN(l)?0:180+l)+")")},t.prototype.eraseLine=function(t){var e=this.svgGByLine.get(t);e&&(this.svg.removeChild(e),this.svgGByLine.delete(t))},t}());new n(o),document.querySelector("body").appendChild(o.svg)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,