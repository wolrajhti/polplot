(()=>{"use strict";var t=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.dotRaw=function(t,e,n,i){return t*n+e*i},t.dot=function(t,e){return this.dotRaw(t.x,t.y,e.x,e.y)},t.prototype.dot=function(e){return t.dot(this,e)},t.crossRaw=function(t,e,n,i){return t*i-n*e},t.cross=function(t,e){return this.crossRaw(t.x,t.y,e.x,e.y)},t.prototype.cross=function(e){return t.cross(this,e)},t.lenRaw=function(t,e){return Math.sqrt(Math.pow(t,2)+Math.pow(e,2))},t.len=function(t){return this.lenRaw(t.x,t.y)},t.prototype.len=function(){return t.len(this)},t.normalizeRaw=function(t,e,n){void 0===n&&(n=1);var i=n/this.lenRaw(t,e);return this.mulRaw(t,e,i)},t.normalize=function(t,e){return void 0===e&&(e=1),this.normalizeRaw(t.x,t.y,e)},t.prototype.normalize=function(e){return void 0===e&&(e=1),t.normalize(this,e)},t.equalsRaw=function(t,e,n,i){return t===n&&e===i},t.equals=function(t,e){return this.equalsRaw(t.x,t.y,e.x,e.y)},t.prototype.equals=function(e){return t.equals(this,e)},t.addRaw=function(e,n,i,r){return new t(e+i,n+r)},t.add=function(t,e){return this.addRaw(t.x,t.y,e.x,e.y)},t.prototype.add=function(e){return t.add(this,e)},t.subRaw=function(e,n,i,r){return new t(e-i,n-r)},t.sub=function(t,e){return this.subRaw(t.x,t.y,e.x,e.y)},t.prototype.sub=function(e){return t.sub(this,e)},t.mulRaw=function(e,n,i){return new t(e*i,n*i)},t.mul=function(t,e){return this.mulRaw(t.x,t.y,e)},t.prototype.mul=function(e){return t.mul(this,e)},t.intersectionTimesRaw=function(e,n,i,r,o,s,u,c){var h=this.crossRaw(i-e,r-n,u-o,c-s);return new t(this.crossRaw(u-o,c-s,e-o,n-s)/h,this.crossRaw(i-e,r-n,e-o,n-s)/h)},t.intersectionTimes=function(t,e,n,i){return this.intersectionTimesRaw(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)},t.prototype.intersectionTimes=function(e,n,i){return t.intersectionTimes(this,e,n,i)},t.intersectionRaw=function(t,e,n,i,r,o,s,u){var c=this.intersectionTimesRaw(t,e,n,i,r,o,s,u);if(c)return c.y=e+(i-e)*c.x,c.x=t+(n-t)*c.x,c},t.intersection=function(t,e,n,i){return this.intersectionRaw(t.x,t.y,e.x,e.y,n.x,n.y,i.x,i.y)},t.prototype.intersection=function(e,n,i){return t.intersection(this,e,n,i)},t.prototype.angle=function(t){if(t){var e=this.angle(),n=t.angle();return n<e?n+2*Math.PI-e:n-e}return this.y>0?Math.acos(this.x/this.len()):2*Math.PI-Math.acos(this.x/this.len())},t}(),e=function(){function e(e,n,i,r){this.v1=new t(e,n),this.v2=new t(i,r)}return Object.defineProperty(e.prototype,"x1",{get:function(){return this.v1.x},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y1",{get:function(){return this.v1.y},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"x2",{get:function(){return this.v2.x},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y2",{get:function(){return this.v2.y},enumerable:!1,configurable:!0}),e.prototype.len=function(){return this.v2.sub(this.v1).len()},e.prototype.pointAt=function(t){return this.v1.add(this.v2.sub(this.v1).mul(t))},e.prototype.before=function(t){return this.v1.add(this.v2.sub(this.v1).mul(-t/this.len()))},e.prototype.after=function(t){return this.v1.add(this.v2.sub(this.v1).mul((this.len()+t)/this.len()))},e.prototype.intersectionTimesWith=function(t){return this.v1.intersectionTimes(this.v2,t.v1,t.v2)},e.prototype.update=function(t,e,n,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===i&&(i=0),this.v1.x+=t,this.v1.y+=e,this.v2.x+=n,this.v2.y+=i},e}(),n=function(){function t(t){void 0===t&&(t=[]),this.vertices=t}return t.prototype.areaBetween=function(t,e){return(this.vertices[e].x-this.vertices[t].x)*(this.vertices[t].y+this.vertices[e].y)/2},t.prototype.area=function(){for(var t=0,e=this.vertices.length-1,n=0;n<this.vertices.length;n++)t+=this.areaBetween(e,n),e=n;return t},t.prototype.shareEdge=function(t,e){for(var n=this.vertices.length-1,i=0;i<this.vertices.length;i++){if(this.vertices[n].equals(t)&&this.vertices[i].equals(e))return!0;n=i}return!1},t.prototype.intersectionWith=function(t){},t.prototype.reverse=function(){this.vertices.reverse()},t.prototype.toString=function(){return this.vertices.length+" points: "+this.vertices.map((function(t){return"("+t.x.toFixed()+", "+t.y.toFixed()+")"})).join(", ")},t}(),i=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),r=0;for(e=0;e<n;e++)for(var o=arguments[e],s=0,u=o.length;s<u;s++,r++)i[r]=o[s];return i},r=function(){function t(t){var n,i,r,o,s=this;this.renderer=t,this.lines=[],this.intersectionTimes=[],this.intersectionPoints=[],this.renderer.setMouseDownHandler((function(t,r,o){i=o||null,(n=r||null)||(n=new e(t.clientX,t.clientY,t.clientX,t.clientY),i=n.v2,s.addLine(n))})),this.renderer.setMouseUpHandler((function(t,e,u){e?(r&&r!==e&&s.renderer.drawLine(r,e===o,!1),r=e,s.renderer.drawLine(r,e===o,!0)):r&&s.renderer.drawLine(r,e===o,!1),n=null,i=null})),this.renderer.setMouseMoveHandler((function(t,e,u){e?(o&&o!==e&&s.renderer.drawLine(o,!1,e===r),o=e,s.renderer.drawLine(o,!0,e===r)):o&&(s.renderer.drawLine(o,!1,e===r),o=null),n&&(i?(i.x=t.clientX,i.y=t.clientY):n.update(t.movementX,t.movementY,t.movementX,t.movementY),s.updateIntersectionTimes(n),s.renderer.drawLine(n,n===o,n===r))})),document.addEventListener("keyup",(function(t){" "===t.key&&s.renderIntersections()}))}return t.prototype.addLine=function(t){this.addIntersectionTimes(t),this.lines.push(t),this.renderer.drawLine(t,!1,!1)},t.prototype.addIntersectionTimes=function(t){for(var e,n=[],i=[],r=0;r<this.lines.length;r++)e=this.lines[r].intersectionTimesWith(t),this.intersectionTimes[r].push(e.x),this.intersectionPoints[r].push(0<=e.x&&e.x<=1&&0<=e.y&&e.y<=1?this.lines[r].v1.add(this.lines[r].v2.sub(this.lines[r].v1).mul(e.x)):null),n.push(e.y),i.push(null);n.push(NaN),i.push(null),this.intersectionTimes.push(n),this.intersectionPoints.push(i),this.renderIntersections()},t.prototype.updateIntersectionTimes=function(t){for(var e,n=this.lines.indexOf(t),i=0;i<this.lines.length;i++)i!==n&&(e=this.lines[i].intersectionTimesWith(t),this.intersectionTimes[i][n]=e.x,this.intersectionTimes[n][i]=e.y,i<n?this.intersectionPoints[i][n]=0<=e.x&&e.x<=1&&0<=e.y&&e.y<=1?this.lines[i].v1.add(this.lines[i].v2.sub(this.lines[i].v1).mul(e.x)):null:this.intersectionPoints[n][i]=0<=e.x&&e.x<=1&&0<=e.y&&e.y<=1?this.lines[i].v1.add(this.lines[i].v2.sub(this.lines[i].v1).mul(e.x)):null);this.renderIntersections()},t.prototype.renderIntersections=function(){var t=this;this.renderer.clearIntersections(),this.intersectionPoints.forEach((function(e){e.forEach((function(e){e&&t.renderer.drawPoint(e)}))})),this.renderer.clearPolygons(),this.buildPolygonsFromIntersectionTimes().forEach((function(e){return t.renderer.drawPolygon(e)}))},t.prototype.testSide=function(t,e,n){return e.sub(t).cross(n.sub(t))>0},t.prototype.partialsAreConnected=function(t,e){return t.vertices[t.vertices.length-2].equals(e.vertices[0])&&t.vertices[t.vertices.length-1].equals(e.vertices[1])},t.prototype.buildPolygonsFromIntersectionTimes=function(){for(var t,e=this,r=this.intersectionTimes.map((function(t,n){return t.map((function(t,e){return e})).filter((function(i){return!isNaN(t[i])&&0<=t[i]&&t[i]<=1&&!isNaN(e.intersectionTimes[i][n])&&0<=e.intersectionTimes[i][n]&&e.intersectionTimes[i][n]<=1})).sort((function(e,n){return t[e]-t[n]}))})),o=[],s=function(t){for(var e=0;e<r[t].length;e++){var i=r[t][e];if(t<i)for(var s=u.lines[t].pointAt(u.intersectionTimes[t][r[t][e]]),c=e-1,h=e+1,a=r[i].findIndex((function(e){return e===t})),l=a-1,p=a+1,d=0<e?u.lines[t].pointAt(u.intersectionTimes[t][r[t][c]]):null,v=e<r[t].length-1?u.lines[t].pointAt(u.intersectionTimes[t][r[t][h]]):null,f=0<a?u.lines[i].pointAt(u.intersectionTimes[i][r[i][l]]):null,y=[d,a<r[i].length-1?u.lines[i].pointAt(u.intersectionTimes[i][r[i][p]]):null,v,f],m=0;m<y.length;m++)if(y[m]){var g=m+1;for(g===y.length&&(g=0);!y[g];)++g===y.length&&(g=0);m!==g&&(4===y.filter((function(t){return!!t})).length&&console.log("push"),o.push(new n([y[m],s,y[g]])))}}},u=this,c=0;c<r.length;c++)s(c);o.forEach((function(t){t.area()<0&&t.reverse()})),console.log("partials",o);for(var h=0;h<o.length;){for(var a=0;a<o.length;a++)if(h!==a&&this.partialsAreConnected(o[h],o[a])){(t=o[h].vertices).splice.apply(t,i([-2,2],o[a].vertices)),o.splice(a,1),h=-1;break}h++}return console.log("incomplete polygons"),o.map((function(t){return console.log(t.toString())})),console.log("polygons",[]),o},t}(),o=document.createElementNS("http://www.w3.org/2000/svg","g");o.setAttribute("stroke","black"),o.setAttribute("stroke-width","0.4px");var s=document.createElementNS("http://www.w3.org/2000/svg","line");s.setAttribute("stroke-dasharray","10, 4, 1, 4");var u=document.createElementNS("http://www.w3.org/2000/svg","path");u.setAttribute("d","M 0, 0A 10, 10, 0, 0, 0, -5, -5A 10, 10, 0, 1, 1, 5, -5A 10, 10, 0, 0, 0, 0, 0"),u.setAttribute("fill","white"),o.appendChild(s),o.appendChild(u),o.appendChild(u.cloneNode());var c=document.createElementNS("http://www.w3.org/2000/svg","circle");c.setAttribute("fill","green"),c.setAttribute("r","3");var h=document.createElementNS("http://www.w3.org/2000/svg","path");h.setAttribute("fill","green"),h.setAttribute("fill-opacity","0.7"),h.setAttribute("stroke-width","3"),h.setAttribute("stroke","grey");var a=new(function(){function t(){this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.intersectionContainer=document.createElementNS("http://www.w3.org/2000/svg","g"),this.polygonContainer=document.createElementNS("http://www.w3.org/2000/svg","g"),this.svgGByLine=new Map,this.lineBySvgG=new Map,this.svg.appendChild(this.intersectionContainer),this.svg.appendChild(this.polygonContainer)}return t.prototype.clickHandlerWrapper=function(t){var e=this;return function(n){var i=document.elementFromPoint(n.clientX,n.clientY),r=e.lineBySvgG.get(i.parentNode);i instanceof SVGPathElement&&i.parentNode!==e.polygonContainer?i.parentNode.children[1]===i?t(n,r,r.v1):t(n,r,r.v2):i instanceof SVGLineElement?t(n,r):t(n)}},t.prototype.setMouseDownHandler=function(t){this.onMouseDown&&this.svg.removeEventListener("mousedown",this.onMouseDown),this.onMouseDown=this.clickHandlerWrapper(t),this.svg.addEventListener("mousedown",this.onMouseDown)},t.prototype.setMouseUpHandler=function(t){this.onMouseUp&&this.svg.removeEventListener("mouseup",this.onMouseUp),this.onMouseUp=this.clickHandlerWrapper(t),this.svg.addEventListener("mouseup",this.onMouseUp)},t.prototype.setMouseMoveHandler=function(t){this.onMouseMove&&this.svg.removeEventListener("mousemove",this.onMouseMove),this.onMouseMove=this.clickHandlerWrapper(t),this.svg.addEventListener("mousemove",this.onMouseMove)},t.prototype.drawLine=function(t,e,n){var i;void 0===e&&(e=!1),void 0===n&&(n=!1),this.svgGByLine.has(t)?i=this.svgGByLine.get(t):(i=o.cloneNode(!0),this.svg.appendChild(i),this.svgGByLine.set(t,i),this.lineBySvgG.set(i,t));var r=i.children[0],s=i.children[1],u=i.children[2],c=t.x1.toFixed(),h=t.y1.toFixed(),a=t.x2.toFixed(),l=t.y2.toFixed();r.setAttribute("x1",c),r.setAttribute("y1",h),r.setAttribute("x2",a),r.setAttribute("y2",l),e?i.setAttribute("stroke-width","0.8px"):i.setAttribute("stroke-width","0.4px"),n?i.setAttribute("stroke","#19a194"):i.setAttribute("stroke","black");var p=180*(t.v2.sub(t.v1).angle()-Math.PI/2)/Math.PI;s.setAttribute("transform","translate("+c+", "+h+") rotate("+(isNaN(p)?0:p)+")"),u.setAttribute("transform","translate("+a+", "+l+") rotate("+(isNaN(p)?0:180+p)+")")},t.prototype.eraseLine=function(t){var e=this.svgGByLine.get(t);e&&(this.svg.removeChild(e),this.svgGByLine.delete(t))},t.prototype.drawPoint=function(t){var e=c.cloneNode();e.setAttribute("cx",t.x.toFixed()),e.setAttribute("cy",t.y.toFixed()),this.intersectionContainer.appendChild(e)},t.prototype.clearContainer=function(t){for(;t.firstChild;)t.removeChild(t.firstChild)},t.prototype.clearIntersections=function(){this.clearContainer(this.intersectionContainer)},t.prototype.drawPolygon=function(t){var e=h.cloneNode();e.setAttribute("d","M"+t.vertices.map((function(t){return t.x+" "+t.y})).join(" L ")+"Z"),e.setAttribute("fill","#"+Math.floor(16777215*Math.random()).toString(16)),this.polygonContainer.appendChild(e)},t.prototype.clearPolygons=function(){this.clearContainer(this.polygonContainer)},t}());new r(a),document.querySelector("body").appendChild(a.svg)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,